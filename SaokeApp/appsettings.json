{
  "ConnectionStrings": {
    "DefaultConnection": "Host=***;Port=***;Database=***;username=***;Password=***;Minimum Pool Size=5;Maximum Pool Size=15;"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Serilog": {
    "LevelSwitches": { "$controlSwitch": "Debug" },
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Information",
        "System": "Warning",
        "Microsoft.AspNetCore": "Warning",
        "AspNetCore.HealthChecks.UI": "Warning",
        "HealthChecks": "Warning",
        "Npgsql": "Debug"
      }
    },
    "Filter": [
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "contextType='HealthChecksDb' or options='StoreName=HealthChecksUI '"
        }
      },
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "SourceContext='Npgsql'"
        }
      },
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "Scope[?] = 'HealthReportCollector is collecting health checks results.'"
        }
      },
      { //Hp --> Logic: Exclude all logs which are related to database instance health checks
        "Name": "ByExcluding",
        "Args": {
          "expression": "HealthCheckName='ApplicationDbContext' and StartsWith(EventId.Name,'Microsoft.EntityFrameworkCore')"
        }
      },
      { //Hp --> Logic: Filters all health check logs which are healthy
        "Name": "ByExcluding",
        "Args": {
          "expression": "EndsWith(RequestPath, '/health/live') and StatusCode=200"
        }
      },
      { //Hp --> Logic: Filters all health check logs which are healthy
        "Name": "ByExcluding",
        "Args": {
          "expression": "EndsWith(RequestPath, '/health/ready') and StatusCode=200"
        }
      }
    ],
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "[{Timestamp:HH:mm:ss.fff} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}"
        }
      }
    ]
  }
}
